heat_template_version: 2014-10-16
description: Multiple Ubuntu Cloud Server and a Cloud Load Balancer: CloudInit script, Parameters Flavor Size Type and Server Count

parameters:
  instance_type:
    type: string
    description: Type of instance (flavor) to be used
    default: 1 GB Performance 
    constraints:
      - allowed_values: [ 1 GB Performance, 2 GB Performance, 4 GB Performance ]
        description: Value must be one of 1 GB Performance, 2 GB Performance, or 4 GB Performance. 
  server_count:
    type: number
    description: Number of Cloud Servers to create as Web Nodes, 1 through 9
    constraints:
      - range: { min: 1, max: 9 }

resources:

  web_lb:
    type: Rackspace::Cloud::LoadBalancer
    depends_on: web_nodes
    properties:
      name: name-heattest-lb
      nodes:
      - addresses: { get_attr: [web_nodes, privateIPv4]}                                                       
        port: 80
        condition: ENABLED
      healthMonitor:
        attemptsBeforeDeactivation: 3
        delay: 10
        timeout: 120
        type: HTTP
        path: "/"
        statusRegex: "."
        bodyRegex: "."
      protocol: HTTP
      port: 80
      virtualIps:
      - type: PUBLIC
        ipVersion: IPV4
    
  web_nodes:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: server_count }
      resource_def:
        type: Rackspace::Cloud::Server
        properties:
          flavor: { get_param: instance_type }
          image: Ubuntu 14.04 LTS (Trusty Tahr)
          name: name-heattest-heattest-LB-Compute Web Nodes 
          user_data_format: RAW
          user_data: |
            export DEBIAN_FRONTEND=noninteractive
            sudo apt-get update
            sudo apt-get install -y curl python-pip python-dev screen apache2
            sudo service apache2 start 
            echo "set nocompatible" > /root/.vimrc
            sudo pip install turbolift eventlet
            uuidgen > /root/cloudqueueid.txt

outputs:
    public_ip:
        value: { get_attr: [ web_nodes, accessIPv4 ] }        
        description: Cloud Servers Public IPs
    servicenet_ip:
        value: { get_attr: [ web_nodes, privateIPv4 ] }    
        description: Cloud Servers ServiceNet IPs
    lb_public_ips: 
        value: { get_attr: [ web_lb, PublicIp ] }
        description: Cloud Load Balancer Public IP
